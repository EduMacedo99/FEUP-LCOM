<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>LCOMProject: video</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">LCOMProject
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">video</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structvbe__info__block__t.html">vbe_info_block_t</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gac19350f0662b5c8fbb1a41e051411014"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#gac19350f0662b5c8fbb1a41e051411014">get_h_res</a> ()</td></tr>
<tr class="memdesc:gac19350f0662b5c8fbb1a41e051411014"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the horizontal resolution in pixels.  <a href="#gac19350f0662b5c8fbb1a41e051411014">More...</a><br /></td></tr>
<tr class="separator:gac19350f0662b5c8fbb1a41e051411014"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab226d056720011120b05e68e5f4d4449"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#gab226d056720011120b05e68e5f4d4449">get_v_res</a> ()</td></tr>
<tr class="memdesc:gab226d056720011120b05e68e5f4d4449"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the vertical resolution in pixels.  <a href="#gab226d056720011120b05e68e5f4d4449">More...</a><br /></td></tr>
<tr class="separator:gab226d056720011120b05e68e5f4d4449"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaef444e0d733eb1ab196ca0f82f8b25b1"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#gaef444e0d733eb1ab196ca0f82f8b25b1">get_bitspp</a> ()</td></tr>
<tr class="memdesc:gaef444e0d733eb1ab196ca0f82f8b25b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of VRAM bits per pixel.  <a href="#gaef444e0d733eb1ab196ca0f82f8b25b1">More...</a><br /></td></tr>
<tr class="separator:gaef444e0d733eb1ab196ca0f82f8b25b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf330c22f78872c5ec05d2541e491f0a1"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#gaf330c22f78872c5ec05d2541e491f0a1">get_bytespp</a> ()</td></tr>
<tr class="memdesc:gaf330c22f78872c5ec05d2541e491f0a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of VRAM bytes per pixel.  <a href="#gaf330c22f78872c5ec05d2541e491f0a1">More...</a><br /></td></tr>
<tr class="separator:gaf330c22f78872c5ec05d2541e491f0a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad1c7acb907ac25626947f2aba1ed8d02"><td class="memItemLeft" align="right" valign="top">struct minix_mem_range&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#gad1c7acb907ac25626947f2aba1ed8d02">get_minix_memory_range</a> ()</td></tr>
<tr class="memdesc:gad1c7acb907ac25626947f2aba1ed8d02"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the struct with the information about minix's memory range.  <a href="#gad1c7acb907ac25626947f2aba1ed8d02">More...</a><br /></td></tr>
<tr class="separator:gad1c7acb907ac25626947f2aba1ed8d02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac07d33ffaee11dd0c1d305de09203d7a"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#gac07d33ffaee11dd0c1d305de09203d7a">get_vram_base</a> ()</td></tr>
<tr class="memdesc:gac07d33ffaee11dd0c1d305de09203d7a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns VRAM's physical address.  <a href="#gac07d33ffaee11dd0c1d305de09203d7a">More...</a><br /></td></tr>
<tr class="separator:gac07d33ffaee11dd0c1d305de09203d7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaebe34b631a4f0ee2083e170041dae548"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#gaebe34b631a4f0ee2083e170041dae548">get_vram_size</a> ()</td></tr>
<tr class="memdesc:gaebe34b631a4f0ee2083e170041dae548"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns VRAM's size.  <a href="#gaebe34b631a4f0ee2083e170041dae548">More...</a><br /></td></tr>
<tr class="separator:gaebe34b631a4f0ee2083e170041dae548"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1d04069f4e8b1556a7a1ed2cd95bfdea"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#ga1d04069f4e8b1556a7a1ed2cd95bfdea">get_video_mem</a> ()</td></tr>
<tr class="memdesc:ga1d04069f4e8b1556a7a1ed2cd95bfdea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the video memory pointer.  <a href="#ga1d04069f4e8b1556a7a1ed2cd95bfdea">More...</a><br /></td></tr>
<tr class="separator:ga1d04069f4e8b1556a7a1ed2cd95bfdea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga88dbe8c315d927664a9fc34415b76a25"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#ga88dbe8c315d927664a9fc34415b76a25">get_db</a> ()</td></tr>
<tr class="memdesc:ga88dbe8c315d927664a9fc34415b76a25"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the double buffer.  <a href="#ga88dbe8c315d927664a9fc34415b76a25">More...</a><br /></td></tr>
<tr class="separator:ga88dbe8c315d927664a9fc34415b76a25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaea57e9ec658aa2fd74a1664635dde0b8"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#gaea57e9ec658aa2fd74a1664635dde0b8">get_color_mode</a> ()</td></tr>
<tr class="memdesc:gaea57e9ec658aa2fd74a1664635dde0b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the color mode.  <a href="#gaea57e9ec658aa2fd74a1664635dde0b8">More...</a><br /></td></tr>
<tr class="separator:gaea57e9ec658aa2fd74a1664635dde0b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4f5703f9b121dc5e85673680a1082c7d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#ga4f5703f9b121dc5e85673680a1082c7d">DBtoVM</a> ()</td></tr>
<tr class="memdesc:ga4f5703f9b121dc5e85673680a1082c7d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Passes the information in the double buffer to the video memory.  <a href="#ga4f5703f9b121dc5e85673680a1082c7d">More...</a><br /></td></tr>
<tr class="separator:ga4f5703f9b121dc5e85673680a1082c7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga29eb7d78a09bc8be20444f3f18d6e3bc"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#ga29eb7d78a09bc8be20444f3f18d6e3bc">set_graph_mode</a> (uint16_t <a class="el" href="group__timer.html#ggada782f3116a896caaa602b70c0c6d8b7af1982b2b77f9b0e7cd29e39b39d8a0b4">mode</a>)</td></tr>
<tr class="memdesc:ga29eb7d78a09bc8be20444f3f18d6e3bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the desired graphical mode.  <a href="#ga29eb7d78a09bc8be20444f3f18d6e3bc">More...</a><br /></td></tr>
<tr class="separator:ga29eb7d78a09bc8be20444f3f18d6e3bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad10bda1ac2f69a1c7e0030069571f69c"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#gad10bda1ac2f69a1c7e0030069571f69c">map_memory</a> ()</td></tr>
<tr class="memdesc:gad10bda1ac2f69a1c7e0030069571f69c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function that maps the vram physical memory into the process's virtual memory, given the information in the static global variables.  <a href="#gad10bda1ac2f69a1c7e0030069571f69c">More...</a><br /></td></tr>
<tr class="separator:gad10bda1ac2f69a1c7e0030069571f69c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac850a7ff4f5b8b3a0da5d63b1347c3a4"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#gac850a7ff4f5b8b3a0da5d63b1347c3a4">get_vram_info</a> (uint16_t <a class="el" href="group__timer.html#ggada782f3116a896caaa602b70c0c6d8b7af1982b2b77f9b0e7cd29e39b39d8a0b4">mode</a>)</td></tr>
<tr class="memdesc:gac850a7ff4f5b8b3a0da5d63b1347c3a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the vram physical address, and updates the static variables accordingly.  <a href="#gac850a7ff4f5b8b3a0da5d63b1347c3a4">More...</a><br /></td></tr>
<tr class="separator:gac850a7ff4f5b8b3a0da5d63b1347c3a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga38326a1641549dd57754aac59a6151cd"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#ga38326a1641549dd57754aac59a6151cd">get_less_bits</a> (uint32_t value, uint32_t num_bits)</td></tr>
<tr class="memdesc:ga38326a1641549dd57754aac59a6151cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">function that returns the least significant bits of a 32-bit value  <a href="#ga38326a1641549dd57754aac59a6151cd">More...</a><br /></td></tr>
<tr class="separator:ga38326a1641549dd57754aac59a6151cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafa705001911d815ef1723ede0c467783"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#gafa705001911d815ef1723ede0c467783">color_pixel</a> (uint16_t x, uint16_t y, uint32_t color)</td></tr>
<tr class="memdesc:gafa705001911d815ef1723ede0c467783"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function that just colors in a pixel, situated at the given coordinates.  <a href="#gafa705001911d815ef1723ede0c467783">More...</a><br /></td></tr>
<tr class="separator:gafa705001911d815ef1723ede0c467783"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac0b825f4162eb1ad853e58ddb6747e61"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#gac0b825f4162eb1ad853e58ddb6747e61">color_pixel_db</a> (uint16_t x, uint16_t y, uint32_t color)</td></tr>
<tr class="memdesc:gac0b825f4162eb1ad853e58ddb6747e61"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function that colors in a pixel in the double buffer.  <a href="#gac0b825f4162eb1ad853e58ddb6747e61">More...</a><br /></td></tr>
<tr class="separator:gac0b825f4162eb1ad853e58ddb6747e61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga279f5f86bc2636c33ba61b041f2ca743"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#ga279f5f86bc2636c33ba61b041f2ca743">change_color</a> (uint16_t row, uint16_t col, uint8_t no_rectangles, uint32_t first, uint8_t step)</td></tr>
<tr class="memdesc:ga279f5f86bc2636c33ba61b041f2ca743"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function that gets the right color for a rectangle, given its coordinates, the first color, the step and the no of rectangles (used in video_test_pattern)  <a href="#ga279f5f86bc2636c33ba61b041f2ca743">More...</a><br /></td></tr>
<tr class="separator:ga279f5f86bc2636c33ba61b041f2ca743"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab82c922d7af713526a8daf26bab88502"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#gab82c922d7af713526a8daf26bab88502">return_color_comp</a> (unsigned field_position, unsigned mask_size, uint32_t color)</td></tr>
<tr class="memdesc:gab82c922d7af713526a8daf26bab88502"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a certain color component, given its field position and mask size.  <a href="#gab82c922d7af713526a8daf26bab88502">More...</a><br /></td></tr>
<tr class="separator:gab82c922d7af713526a8daf26bab88502"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa9ef010906ea1964685aaac5469ccacc"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#gaa9ef010906ea1964685aaac5469ccacc">draw_pixmap</a> (const char *sprite, uint16_t x, uint16_t y, int width, int height)</td></tr>
<tr class="memdesc:gaa9ef010906ea1964685aaac5469ccacc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draws a pixmap on the screen, on the given coordinates (does not draw when the color is transparent)  <a href="#gaa9ef010906ea1964685aaac5469ccacc">More...</a><br /></td></tr>
<tr class="separator:gaa9ef010906ea1964685aaac5469ccacc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8c06c38c592f3aedcd74ac2c4882ef75"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#ga8c06c38c592f3aedcd74ac2c4882ef75">draw_pixmap_db</a> (const char *sprite, int x, int y, int width, int height)</td></tr>
<tr class="memdesc:ga8c06c38c592f3aedcd74ac2c4882ef75"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draws a pixmap on the double buffer, on the given coordinates (does not draw when the color is transparent)  <a href="#ga8c06c38c592f3aedcd74ac2c4882ef75">More...</a><br /></td></tr>
<tr class="separator:ga8c06c38c592f3aedcd74ac2c4882ef75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5b7bc9db9632b98e3370cc54fb09e363"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#ga5b7bc9db9632b98e3370cc54fb09e363">erase_pixmap</a> (uint16_t x, uint16_t y, int width, int height)</td></tr>
<tr class="memdesc:ga5b7bc9db9632b98e3370cc54fb09e363"><td class="mdescLeft">&#160;</td><td class="mdescRight">Erases a pixmap that is on the screen, given its coordinates.  <a href="#ga5b7bc9db9632b98e3370cc54fb09e363">More...</a><br /></td></tr>
<tr class="separator:ga5b7bc9db9632b98e3370cc54fb09e363"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa63b97893eb9b2a15f66e621e74bf043"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#gaa63b97893eb9b2a15f66e621e74bf043">vbe_get_info_about_mode</a> (uint16_t <a class="el" href="group__timer.html#ggada782f3116a896caaa602b70c0c6d8b7af1982b2b77f9b0e7cd29e39b39d8a0b4">mode</a>, vbe_mode_info_t *vmi_p)</td></tr>
<tr class="memdesc:gaa63b97893eb9b2a15f66e621e74bf043"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function that gets the information about the current graphical mode.  <a href="#gaa63b97893eb9b2a15f66e621e74bf043">More...</a><br /></td></tr>
<tr class="separator:gaa63b97893eb9b2a15f66e621e74bf043"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafa445e5837d138c8bc596dd2f287fc44"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#gafa445e5837d138c8bc596dd2f287fc44">clear_screen</a> ()</td></tr>
<tr class="memdesc:gafa445e5837d138c8bc596dd2f287fc44"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the screen.  <a href="#gafa445e5837d138c8bc596dd2f287fc44">More...</a><br /></td></tr>
<tr class="separator:gafa445e5837d138c8bc596dd2f287fc44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad742d2aed15b2ba345fab8f03d59d6ac"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#gad742d2aed15b2ba345fab8f03d59d6ac">clear_db</a> ()</td></tr>
<tr class="memdesc:gad742d2aed15b2ba345fab8f03d59d6ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the double buffer.  <a href="#gad742d2aed15b2ba345fab8f03d59d6ac">More...</a><br /></td></tr>
<tr class="separator:gad742d2aed15b2ba345fab8f03d59d6ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab47125d566563880eb28ee05766dccaf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#gab47125d566563880eb28ee05766dccaf">copy_db</a> (char *colors)</td></tr>
<tr class="memdesc:gab47125d566563880eb28ee05766dccaf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies, using memcpy, to the double buffer.  <a href="#gab47125d566563880eb28ee05766dccaf">More...</a><br /></td></tr>
<tr class="separator:gab47125d566563880eb28ee05766dccaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaec7619d90f6bc9b265d3def132eda095"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#gaec7619d90f6bc9b265d3def132eda095">copy_line_db</a> (char *colors, int line_index)</td></tr>
<tr class="memdesc:gaec7619d90f6bc9b265d3def132eda095"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies, using memcpy, a line to the double buffer.  <a href="#gaec7619d90f6bc9b265d3def132eda095">More...</a><br /></td></tr>
<tr class="separator:gaec7619d90f6bc9b265d3def132eda095"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8bf1d98716e811130cb0a058acb47717"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#ga8bf1d98716e811130cb0a058acb47717">check_pixel_transp</a> (char *pixmap, int x, int y, int width)</td></tr>
<tr class="memdesc:ga8bf1d98716e811130cb0a058acb47717"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if a certain pixel is transparent or not.  <a href="#ga8bf1d98716e811130cb0a058acb47717">More...</a><br /></td></tr>
<tr class="separator:ga8bf1d98716e811130cb0a058acb47717"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae3bef084bca22607e70ad7039c8fe062"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__video.html#gae3bef084bca22607e70ad7039c8fe062">vbe_get_ctrl_info</a> (vg_vbe_contr_info_t *ctrl_info, <a class="el" href="structvbe__info__block__t.html">vbe_info_block_t</a> *info_block)</td></tr>
<tr class="memdesc:gae3bef084bca22607e70ad7039c8fe062"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function that calls VBE function 0x4F00, to get controller information.  <a href="#gae3bef084bca22607e70ad7039c8fe062">More...</a><br /></td></tr>
<tr class="separator:gae3bef084bca22607e70ad7039c8fe062"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Functions for manipulating the video graphics card </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="ga279f5f86bc2636c33ba61b041f2ca743"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga279f5f86bc2636c33ba61b041f2ca743">&#9670;&nbsp;</a></span>change_color()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t change_color </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>row</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>col</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>no_rectangles</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>first</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>step</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Function that gets the right color for a rectangle, given its coordinates, the first color, the step and the no of rectangles (used in video_test_pattern) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">row</td><td>Row </td></tr>
    <tr><td class="paramname">col</td><td>column </td></tr>
    <tr><td class="paramname">no_rectangles</td><td>Number of rectangles </td></tr>
    <tr><td class="paramname">first</td><td>First color </td></tr>
    <tr><td class="paramname">step</td><td>Step used</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The right color for the rectangle </dd></dl>

</div>
</div>
<a id="ga8bf1d98716e811130cb0a058acb47717"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8bf1d98716e811130cb0a058acb47717">&#9670;&nbsp;</a></span>check_pixel_transp()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool check_pixel_transp </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>pixmap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>width</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if a certain pixel is transparent or not. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pixmap</td><td>The pixmap </td></tr>
    <tr><td class="paramname">x</td><td>X coordinate of the pixel, in the pixmap </td></tr>
    <tr><td class="paramname">y</td><td>Y coordinate of the pixel, in the pixmap </td></tr>
    <tr><td class="paramname">width</td><td>Width of the pixmap</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if the pixel is transparent, false otherwise </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><img src="group__video_ga8bf1d98716e811130cb0a058acb47717_cgraph.png" border="0" usemap="#group__video_ga8bf1d98716e811130cb0a058acb47717_cgraph" alt=""/></div>
<map name="group__video_ga8bf1d98716e811130cb0a058acb47717_cgraph" id="group__video_ga8bf1d98716e811130cb0a058acb47717_cgraph">
<area shape="rect" id="node2" href="group__video.html#gaf330c22f78872c5ec05d2541e491f0a1" title="Returns the number of VRAM bytes per pixel. " alt="" coords="188,5,281,32"/>
</map>
</div>

</div>
</div>
<a id="gad742d2aed15b2ba345fab8f03d59d6ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad742d2aed15b2ba345fab8f03d59d6ac">&#9670;&nbsp;</a></span>clear_db()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int clear_db </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Clears the double buffer. </p>
<dl class="section return"><dt>Returns</dt><dd>0, indicating no error ocurred </dd></dl>

</div>
</div>
<a id="gafa445e5837d138c8bc596dd2f287fc44"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafa445e5837d138c8bc596dd2f287fc44">&#9670;&nbsp;</a></span>clear_screen()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int clear_screen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Clears the screen. </p>
<dl class="section return"><dt>Returns</dt><dd>0, indicating no error ocurred </dd></dl>

</div>
</div>
<a id="gafa705001911d815ef1723ede0c467783"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafa705001911d815ef1723ede0c467783">&#9670;&nbsp;</a></span>color_pixel()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int color_pixel </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>color</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Function that just colors in a pixel, situated at the given coordinates. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>X coordinate of the pixel </td></tr>
    <tr><td class="paramname">y</td><td>Y coordinate of the pixel </td></tr>
    <tr><td class="paramname">color</td><td>New color for the pixel</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>0, indicating no error ocurred </dd></dl>

</div>
</div>
<a id="gac0b825f4162eb1ad853e58ddb6747e61"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac0b825f4162eb1ad853e58ddb6747e61">&#9670;&nbsp;</a></span>color_pixel_db()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int color_pixel_db </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>color</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Function that colors in a pixel in the double buffer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>X coordinate of the pixel </td></tr>
    <tr><td class="paramname">y</td><td>Y coordinate of the pixel </td></tr>
    <tr><td class="paramname">color</td><td>New color for the pixel</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>0, indicating no error ocurred </dd></dl>

</div>
</div>
<a id="gab47125d566563880eb28ee05766dccaf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab47125d566563880eb28ee05766dccaf">&#9670;&nbsp;</a></span>copy_db()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void copy_db </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>colors</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copies, using memcpy, to the double buffer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">colors</td><td>The color bytes to be copied to the double buffer </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="gaec7619d90f6bc9b265d3def132eda095"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaec7619d90f6bc9b265d3def132eda095">&#9670;&nbsp;</a></span>copy_line_db()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void copy_line_db </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>colors</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>line_index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copies, using memcpy, a line to the double buffer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">colors</td><td>The color bytes to be copied to the double buffer </td></tr>
    <tr><td class="paramname">line_index</td><td>Specifies what line of the double buffer is going to be updated </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga4f5703f9b121dc5e85673680a1082c7d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4f5703f9b121dc5e85673680a1082c7d">&#9670;&nbsp;</a></span>DBtoVM()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DBtoVM </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Passes the information in the double buffer to the video memory. </p>

</div>
</div>
<a id="gaa9ef010906ea1964685aaac5469ccacc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa9ef010906ea1964685aaac5469ccacc">&#9670;&nbsp;</a></span>draw_pixmap()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int draw_pixmap </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>sprite</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>height</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Draws a pixmap on the screen, on the given coordinates (does not draw when the color is transparent) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sprite</td><td>The pixmap </td></tr>
    <tr><td class="paramname">x</td><td>X coordinate </td></tr>
    <tr><td class="paramname">y</td><td>Y coordinate </td></tr>
    <tr><td class="paramname">width</td><td>Width of the pixmap </td></tr>
    <tr><td class="paramname">height</td><td>Height of the pixmap</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if some error ocurred, 0 otherwise </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><img src="group__video_gaa9ef010906ea1964685aaac5469ccacc_cgraph.png" border="0" usemap="#group__video_gaa9ef010906ea1964685aaac5469ccacc_cgraph" alt=""/></div>
<map name="group__video_gaa9ef010906ea1964685aaac5469ccacc_cgraph" id="group__video_gaa9ef010906ea1964685aaac5469ccacc_cgraph">
<area shape="rect" id="node2" href="group__video.html#gab226d056720011120b05e68e5f4d4449" title="Returns the vertical resolution in pixels. " alt="" coords="160,5,237,32"/>
<area shape="rect" id="node3" href="group__video.html#gac19350f0662b5c8fbb1a41e051411014" title="Returns the horizontal resolution in pixels. " alt="" coords="159,56,238,83"/>
<area shape="rect" id="node4" href="group__video.html#gaf330c22f78872c5ec05d2541e491f0a1" title="Returns the number of VRAM bytes per pixel. " alt="" coords="152,107,245,133"/>
<area shape="rect" id="node5" href="group__video.html#gafa705001911d815ef1723ede0c467783" title="Function that just colors in a pixel, situated at the given coordinates. " alt="" coords="157,157,241,184"/>
</map>
</div>

</div>
</div>
<a id="ga8c06c38c592f3aedcd74ac2c4882ef75"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga8c06c38c592f3aedcd74ac2c4882ef75">&#9670;&nbsp;</a></span>draw_pixmap_db()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int draw_pixmap_db </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>sprite</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>height</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Draws a pixmap on the double buffer, on the given coordinates (does not draw when the color is transparent) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sprite</td><td>The pixmap </td></tr>
    <tr><td class="paramname">x</td><td>X coordinate </td></tr>
    <tr><td class="paramname">y</td><td>Y coordinate </td></tr>
    <tr><td class="paramname">width</td><td>Width of the pixmap </td></tr>
    <tr><td class="paramname">height</td><td>Height of the pixmap</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if some error ocurred, 0 otherwise </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><img src="group__video_ga8c06c38c592f3aedcd74ac2c4882ef75_cgraph.png" border="0" usemap="#group__video_ga8c06c38c592f3aedcd74ac2c4882ef75_cgraph" alt=""/></div>
<map name="group__video_ga8c06c38c592f3aedcd74ac2c4882ef75_cgraph" id="group__video_ga8c06c38c592f3aedcd74ac2c4882ef75_cgraph">
<area shape="rect" id="node2" href="group__video.html#gab226d056720011120b05e68e5f4d4449" title="Returns the vertical resolution in pixels. " alt="" coords="186,5,263,32"/>
<area shape="rect" id="node3" href="group__video.html#gac19350f0662b5c8fbb1a41e051411014" title="Returns the horizontal resolution in pixels. " alt="" coords="185,56,264,83"/>
<area shape="rect" id="node4" href="group__video.html#gaf330c22f78872c5ec05d2541e491f0a1" title="Returns the number of VRAM bytes per pixel. " alt="" coords="178,107,271,133"/>
<area shape="rect" id="node5" href="group__video.html#gac0b825f4162eb1ad853e58ddb6747e61" title="Function that colors in a pixel in the double buffer. " alt="" coords="172,157,277,184"/>
</map>
</div>

</div>
</div>
<a id="ga5b7bc9db9632b98e3370cc54fb09e363"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5b7bc9db9632b98e3370cc54fb09e363">&#9670;&nbsp;</a></span>erase_pixmap()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int erase_pixmap </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>height</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Erases a pixmap that is on the screen, given its coordinates. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>X coordinate </td></tr>
    <tr><td class="paramname">y</td><td>Y coordinate </td></tr>
    <tr><td class="paramname">width</td><td>Width of the pixmap </td></tr>
    <tr><td class="paramname">height</td><td>Height of the pixmap</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if some error ocurred, 0 otherwise </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><img src="group__video_ga5b7bc9db9632b98e3370cc54fb09e363_cgraph.png" border="0" usemap="#group__video_ga5b7bc9db9632b98e3370cc54fb09e363_cgraph" alt=""/></div>
<map name="group__video_ga5b7bc9db9632b98e3370cc54fb09e363_cgraph" id="group__video_ga5b7bc9db9632b98e3370cc54fb09e363_cgraph">
<area shape="rect" id="node2" href="group__video.html#gab226d056720011120b05e68e5f4d4449" title="Returns the vertical resolution in pixels. " alt="" coords="159,5,237,32"/>
<area shape="rect" id="node3" href="group__video.html#gac19350f0662b5c8fbb1a41e051411014" title="Returns the horizontal resolution in pixels. " alt="" coords="159,56,237,83"/>
<area shape="rect" id="node4" href="group__video.html#gafa705001911d815ef1723ede0c467783" title="Function that just colors in a pixel, situated at the given coordinates. " alt="" coords="156,107,240,133"/>
</map>
</div>

</div>
</div>
<a id="gaef444e0d733eb1ab196ca0f82f8b25b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaef444e0d733eb1ab196ca0f82f8b25b1">&#9670;&nbsp;</a></span>get_bitspp()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned get_bitspp </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the number of VRAM bits per pixel. </p>
<dl class="section return"><dt>Returns</dt><dd>Number of VRAM bits per pixel </dd></dl>

</div>
</div>
<a id="gaf330c22f78872c5ec05d2541e491f0a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf330c22f78872c5ec05d2541e491f0a1">&#9670;&nbsp;</a></span>get_bytespp()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned get_bytespp </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the number of VRAM bytes per pixel. </p>
<dl class="section return"><dt>Returns</dt><dd>Number of VRAM bytes per pixel </dd></dl>

</div>
</div>
<a id="gaea57e9ec658aa2fd74a1664635dde0b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaea57e9ec658aa2fd74a1664635dde0b8">&#9670;&nbsp;</a></span>get_color_mode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned get_color_mode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the color mode. </p>
<dl class="section return"><dt>Returns</dt><dd>The color mode </dd></dl>

</div>
</div>
<a id="ga88dbe8c315d927664a9fc34415b76a25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga88dbe8c315d927664a9fc34415b76a25">&#9670;&nbsp;</a></span>get_db()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* get_db </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the double buffer. </p>
<dl class="section return"><dt>Returns</dt><dd>The double buffer </dd></dl>

</div>
</div>
<a id="gac19350f0662b5c8fbb1a41e051411014"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac19350f0662b5c8fbb1a41e051411014">&#9670;&nbsp;</a></span>get_h_res()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned get_h_res </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the horizontal resolution in pixels. </p>
<dl class="section return"><dt>Returns</dt><dd>The horizontal resolution </dd></dl>

</div>
</div>
<a id="ga38326a1641549dd57754aac59a6151cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga38326a1641549dd57754aac59a6151cd">&#9670;&nbsp;</a></span>get_less_bits()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t get_less_bits </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>num_bits</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>function that returns the least significant bits of a 32-bit value </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>32-bit value </td></tr>
    <tr><td class="paramname">num_bits</td><td>Number of bits we want</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The least significant bits of the 32-bit value </dd></dl>

</div>
</div>
<a id="gad1c7acb907ac25626947f2aba1ed8d02"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad1c7acb907ac25626947f2aba1ed8d02">&#9670;&nbsp;</a></span>get_minix_memory_range()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct minix_mem_range get_minix_memory_range </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the struct with the information about minix's memory range. </p>
<dl class="section return"><dt>Returns</dt><dd>Struct with the information about minix's memory range </dd></dl>

</div>
</div>
<a id="gab226d056720011120b05e68e5f4d4449"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab226d056720011120b05e68e5f4d4449">&#9670;&nbsp;</a></span>get_v_res()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned get_v_res </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the vertical resolution in pixels. </p>
<dl class="section return"><dt>Returns</dt><dd>The vertical resolution </dd></dl>

</div>
</div>
<a id="ga1d04069f4e8b1556a7a1ed2cd95bfdea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga1d04069f4e8b1556a7a1ed2cd95bfdea">&#9670;&nbsp;</a></span>get_video_mem()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* get_video_mem </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the video memory pointer. </p>
<dl class="section return"><dt>Returns</dt><dd>The video memory pointer </dd></dl>

</div>
</div>
<a id="gac07d33ffaee11dd0c1d305de09203d7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac07d33ffaee11dd0c1d305de09203d7a">&#9670;&nbsp;</a></span>get_vram_base()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int get_vram_base </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns VRAM's physical address. </p>
<dl class="section return"><dt>Returns</dt><dd>VRAM's physical address </dd></dl>

</div>
</div>
<a id="gac850a7ff4f5b8b3a0da5d63b1347c3a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac850a7ff4f5b8b3a0da5d63b1347c3a4">&#9670;&nbsp;</a></span>get_vram_info()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int get_vram_info </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>mode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the vram physical address, and updates the static variables accordingly. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mode</td><td>The graphical mode used</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if some error ocurred, 0 otherwise </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><img src="group__video_gac850a7ff4f5b8b3a0da5d63b1347c3a4_cgraph.png" border="0" usemap="#group__video_gac850a7ff4f5b8b3a0da5d63b1347c3a4_cgraph" alt=""/></div>
<map name="group__video_gac850a7ff4f5b8b3a0da5d63b1347c3a4_cgraph" id="group__video_gac850a7ff4f5b8b3a0da5d63b1347c3a4_cgraph">
<area shape="rect" id="node2" href="group__video.html#gaa63b97893eb9b2a15f66e621e74bf043" title="Function that gets the information about the current graphical mode. " alt="" coords="155,5,325,32"/>
</map>
</div>

</div>
</div>
<a id="gaebe34b631a4f0ee2083e170041dae548"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaebe34b631a4f0ee2083e170041dae548">&#9670;&nbsp;</a></span>get_vram_size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int get_vram_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns VRAM's size. </p>
<dl class="section return"><dt>Returns</dt><dd>The VRAM's size </dd></dl>

</div>
</div>
<a id="gad10bda1ac2f69a1c7e0030069571f69c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad10bda1ac2f69a1c7e0030069571f69c">&#9670;&nbsp;</a></span>map_memory()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int map_memory </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Function that maps the vram physical memory into the process's virtual memory, given the information in the static global variables. </p>
<dl class="section return"><dt>Returns</dt><dd>1 if some error ocurred, 0 otherwise </dd></dl>

</div>
</div>
<a id="gab82c922d7af713526a8daf26bab88502"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab82c922d7af713526a8daf26bab88502">&#9670;&nbsp;</a></span>return_color_comp()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t return_color_comp </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>field_position</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>mask_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>color</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a certain color component, given its field position and mask size. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">field_position</td><td>Filed position </td></tr>
    <tr><td class="paramname">mask_size</td><td>Mask size </td></tr>
    <tr><td class="paramname">color</td><td>Color</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The desired color component </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><img src="group__video_gab82c922d7af713526a8daf26bab88502_cgraph.png" border="0" usemap="#group__video_gab82c922d7af713526a8daf26bab88502_cgraph" alt=""/></div>
<map name="group__video_gab82c922d7af713526a8daf26bab88502_cgraph" id="group__video_gab82c922d7af713526a8daf26bab88502_cgraph">
<area shape="rect" id="node2" href="group__video.html#ga38326a1641549dd57754aac59a6151cd" title="function that returns the least significant bits of a 32&#45;bit value " alt="" coords="183,5,281,32"/>
</map>
</div>

</div>
</div>
<a id="ga29eb7d78a09bc8be20444f3f18d6e3bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga29eb7d78a09bc8be20444f3f18d6e3bc">&#9670;&nbsp;</a></span>set_graph_mode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int set_graph_mode </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>mode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the desired graphical mode. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mode</td><td>Graphical mode</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if some error ocurred, 0 otherwise </dd></dl>

</div>
</div>
<a id="gae3bef084bca22607e70ad7039c8fe062"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gae3bef084bca22607e70ad7039c8fe062">&#9670;&nbsp;</a></span>vbe_get_ctrl_info()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int vbe_get_ctrl_info </td>
          <td>(</td>
          <td class="paramtype">vg_vbe_contr_info_t *&#160;</td>
          <td class="paramname"><em>ctrl_info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structvbe__info__block__t.html">vbe_info_block_t</a> *&#160;</td>
          <td class="paramname"><em>info_block</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Function that calls VBE function 0x4F00, to get controller information. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ctrl_info</td><td>Pointer to struct vg_vbe_contr_info_t </td></tr>
    <tr><td class="paramname">info_block</td><td>Pointer to struct <a class="el" href="structvbe__info__block__t.html">vbe_info_block_t</a></td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if some error ocurred, 0 otherwise </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><img src="group__video_gae3bef084bca22607e70ad7039c8fe062_cgraph.png" border="0" usemap="#group__video_gae3bef084bca22607e70ad7039c8fe062_cgraph" alt=""/></div>
<map name="group__video_gae3bef084bca22607e70ad7039c8fe062_cgraph" id="group__video_gae3bef084bca22607e70ad7039c8fe062_cgraph">
<area shape="rect" id="node2" href="group__video.html#ga38326a1641549dd57754aac59a6151cd" title="function that returns the least significant bits of a 32&#45;bit value " alt="" coords="172,5,271,32"/>
</map>
</div>

</div>
</div>
<a id="gaa63b97893eb9b2a15f66e621e74bf043"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa63b97893eb9b2a15f66e621e74bf043">&#9670;&nbsp;</a></span>vbe_get_info_about_mode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int vbe_get_info_about_mode </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>mode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vbe_mode_info_t *&#160;</td>
          <td class="paramname"><em>vmi_p</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Function that gets the information about the current graphical mode. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mode</td><td>Graphical mode </td></tr>
    <tr><td class="paramname">vmi_p</td><td>VBE mode info pointer</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if some error ocurred, 0 otherwise </dd></dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.14
</small></address>
</body>
</html>
