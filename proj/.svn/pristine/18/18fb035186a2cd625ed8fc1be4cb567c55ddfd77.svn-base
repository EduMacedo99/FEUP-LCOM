<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>LCOMProject: keyboard</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">LCOMProject
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">keyboard</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gaa7a491d4d95eab5ca5326c4000ad67f8"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__keyboard.html#gaa7a491d4d95eab5ca5326c4000ad67f8">kbd_subscribe_int</a> (uint8_t *bit_no)</td></tr>
<tr class="memdesc:gaa7a491d4d95eab5ca5326c4000ad67f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subscribes keyboard interrupts on exclusive mode (meaning that the Minix IH is disabled)  <a href="#gaa7a491d4d95eab5ca5326c4000ad67f8">More...</a><br /></td></tr>
<tr class="separator:gaa7a491d4d95eab5ca5326c4000ad67f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5bdf6cfb570c375192b0d87913b65c57"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__keyboard.html#ga5bdf6cfb570c375192b0d87913b65c57">kbd_unsubscribe_int</a> ()</td></tr>
<tr class="memdesc:ga5bdf6cfb570c375192b0d87913b65c57"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unsubscribes the keyboard interrupts.  <a href="#ga5bdf6cfb570c375192b0d87913b65c57">More...</a><br /></td></tr>
<tr class="separator:ga5bdf6cfb570c375192b0d87913b65c57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacce7b36043562cfa187793cddb26537e"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__keyboard.html#gacce7b36043562cfa187793cddb26537e">sys_inb_cnt</a> (port_t port, uint32_t *byte)</td></tr>
<tr class="memdesc:gacce7b36043562cfa187793cddb26537e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Counts the number of calls of sys_inb (only for lab3, not for the project)  <a href="#gacce7b36043562cfa187793cddb26537e">More...</a><br /></td></tr>
<tr class="separator:gacce7b36043562cfa187793cddb26537e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaea65044de90c8a358062e32b3371adff"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__keyboard.html#gaea65044de90c8a358062e32b3371adff">is_make</a> (uint8_t code, bool *make)</td></tr>
<tr class="memdesc:gaea65044de90c8a358062e32b3371adff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tells if the key code is a make code or a break code.  <a href="#gaea65044de90c8a358062e32b3371adff">More...</a><br /></td></tr>
<tr class="separator:gaea65044de90c8a358062e32b3371adff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga51d994a8549032c3fd7d79cdffb01b9a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__keyboard.html#ga51d994a8549032c3fd7d79cdffb01b9a">process_scancode</a> (uint8_t bytes[], uint8_t *size, bool *make, bool *twoBytes)</td></tr>
<tr class="memdesc:ga51d994a8549032c3fd7d79cdffb01b9a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Processes the scancode received.  <a href="#ga51d994a8549032c3fd7d79cdffb01b9a">More...</a><br /></td></tr>
<tr class="separator:ga51d994a8549032c3fd7d79cdffb01b9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf2fa5693a41a46d5c44dcfcf16865b06"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__keyboard.html#gaf2fa5693a41a46d5c44dcfcf16865b06">keyboard_enable</a> ()</td></tr>
<tr class="memdesc:gaf2fa5693a41a46d5c44dcfcf16865b06"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function that enables the functionality of the keyboard after the polling cycle ends.  <a href="#gaf2fa5693a41a46d5c44dcfcf16865b06">More...</a><br /></td></tr>
<tr class="separator:gaf2fa5693a41a46d5c44dcfcf16865b06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga191978dc5f40a3532d099c211a059c6a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__keyboard.html#ga191978dc5f40a3532d099c211a059c6a">read_command_byte</a> (uint8_t *cmd_byte)</td></tr>
<tr class="memdesc:ga191978dc5f40a3532d099c211a059c6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads the command byte.  <a href="#ga191978dc5f40a3532d099c211a059c6a">More...</a><br /></td></tr>
<tr class="separator:ga191978dc5f40a3532d099c211a059c6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab93137324dbf429632060d75313911ee"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__keyboard.html#gab93137324dbf429632060d75313911ee">write_command_byte</a> (uint8_t cmd_byte)</td></tr>
<tr class="memdesc:gab93137324dbf429632060d75313911ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a command byte.  <a href="#gab93137324dbf429632060d75313911ee">More...</a><br /></td></tr>
<tr class="separator:gab93137324dbf429632060d75313911ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5ca96afb5f587de11c9499895d13373a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__keyboard.html#ga5ca96afb5f587de11c9499895d13373a">issue_command</a> (uint8_t cmd)</td></tr>
<tr class="memdesc:ga5ca96afb5f587de11c9499895d13373a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks, via reading the status register, if it can issue a command; if it can, it issues it.  <a href="#ga5ca96afb5f587de11c9499895d13373a">More...</a><br /></td></tr>
<tr class="separator:ga5ca96afb5f587de11c9499895d13373a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga20947404a9bcc23bea2ca366463344fa"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__keyboard.html#ga20947404a9bcc23bea2ca366463344fa">issue_arg</a> (uint8_t cmd)</td></tr>
<tr class="memdesc:ga20947404a9bcc23bea2ca366463344fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks, via reading the status register, if it can issue an argument; if it can,it issues it.  <a href="#ga20947404a9bcc23bea2ca366463344fa">More...</a><br /></td></tr>
<tr class="separator:ga20947404a9bcc23bea2ca366463344fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga971c17fcc6d78ca930d6db28a3cd1e1f"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__keyboard.html#ga971c17fcc6d78ca930d6db28a3cd1e1f">read_ret_value</a> (uint8_t *ret)</td></tr>
<tr class="memdesc:ga971c17fcc6d78ca930d6db28a3cd1e1f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads a return value from the KBC (used after issuing a command that asks for a return value)  <a href="#ga971c17fcc6d78ca930d6db28a3cd1e1f">More...</a><br /></td></tr>
<tr class="separator:ga971c17fcc6d78ca930d6db28a3cd1e1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Functions for manipulating the kbc controller for the keyboard </p>
<h2 class="groupheader">Function Documentation</h2>
<a id="gaea65044de90c8a358062e32b3371adff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaea65044de90c8a358062e32b3371adff">&#9670;&nbsp;</a></span>is_make()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int is_make </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>code</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool *&#160;</td>
          <td class="paramname"><em>make</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Tells if the key code is a make code or a break code. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">code</td><td>Key code </td></tr>
    <tr><td class="paramname">make</td><td>Will be true if it is a make code; false if it is a break code</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>0, indicating no error ocurred </dd></dl>

</div>
</div>
<a id="ga20947404a9bcc23bea2ca366463344fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga20947404a9bcc23bea2ca366463344fa">&#9670;&nbsp;</a></span>issue_arg()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int issue_arg </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>cmd</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks, via reading the status register, if it can issue an argument; if it can,it issues it. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">cmd</td><td>Argument to be issued</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if some error ocurred, 0 otherwise </dd></dl>

</div>
</div>
<a id="ga5ca96afb5f587de11c9499895d13373a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5ca96afb5f587de11c9499895d13373a">&#9670;&nbsp;</a></span>issue_command()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int issue_command </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>cmd</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks, via reading the status register, if it can issue a command; if it can, it issues it. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">cmd</td><td>Command to be issued</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if some error ocurred, 0 otherwise </dd></dl>

</div>
</div>
<a id="gaa7a491d4d95eab5ca5326c4000ad67f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa7a491d4d95eab5ca5326c4000ad67f8">&#9670;&nbsp;</a></span>kbd_subscribe_int()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int kbd_subscribe_int </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>bit_no</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Subscribes keyboard interrupts on exclusive mode (meaning that the Minix IH is disabled) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bit_no</td><td>Bit number</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if some error ocurred, 0 otherwise </dd></dl>

</div>
</div>
<a id="ga5bdf6cfb570c375192b0d87913b65c57"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5bdf6cfb570c375192b0d87913b65c57">&#9670;&nbsp;</a></span>kbd_unsubscribe_int()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int kbd_unsubscribe_int </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Unsubscribes the keyboard interrupts. </p>
<dl class="section return"><dt>Returns</dt><dd>1 if some error ocurred, 0 otherwise </dd></dl>

</div>
</div>
<a id="gaf2fa5693a41a46d5c44dcfcf16865b06"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf2fa5693a41a46d5c44dcfcf16865b06">&#9670;&nbsp;</a></span>keyboard_enable()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int keyboard_enable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Function that enables the functionality of the keyboard after the polling cycle ends. </p>
<dl class="section return"><dt>Returns</dt><dd>1 if some error ocurred, 0 otherwise </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><img src="group__keyboard_gaf2fa5693a41a46d5c44dcfcf16865b06_cgraph.png" border="0" usemap="#group__keyboard_gaf2fa5693a41a46d5c44dcfcf16865b06_cgraph" alt=""/></div>
<map name="group__keyboard_gaf2fa5693a41a46d5c44dcfcf16865b06_cgraph" id="group__keyboard_gaf2fa5693a41a46d5c44dcfcf16865b06_cgraph">
<area shape="rect" id="node2" href="group__keyboard.html#ga191978dc5f40a3532d099c211a059c6a" title="Reads the command byte. " alt="" coords="175,31,317,57"/>
<area shape="rect" id="node5" href="group__keyboard.html#gab93137324dbf429632060d75313911ee" title="Writes a command byte. " alt="" coords="173,81,319,108"/>
<area shape="rect" id="node3" href="group__keyboard.html#ga5ca96afb5f587de11c9499895d13373a" title="Checks, via reading the status register, if it can issue a command; if it can, it issues it..." alt="" coords="367,56,484,83"/>
<area shape="rect" id="node4" href="group__keyboard.html#ga971c17fcc6d78ca930d6db28a3cd1e1f" title="Reads a return value from the KBC (used after issuing a command that asks for a return value) ..." alt="" coords="373,5,478,32"/>
<area shape="rect" id="node6" href="group__keyboard.html#ga20947404a9bcc23bea2ca366463344fa" title="Checks, via reading the status register, if it can issue an argument; if it can,it issues it..." alt="" coords="386,107,465,133"/>
</map>
</div>

</div>
</div>
<a id="ga51d994a8549032c3fd7d79cdffb01b9a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga51d994a8549032c3fd7d79cdffb01b9a">&#9670;&nbsp;</a></span>process_scancode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int process_scancode </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>bytes</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool *&#160;</td>
          <td class="paramname"><em>make</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool *&#160;</td>
          <td class="paramname"><em>twoBytes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Processes the scancode received. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bytes</td><td>Array with the key code bytes </td></tr>
    <tr><td class="paramname">size</td><td>Size of the array </td></tr>
    <tr><td class="paramname">make</td><td>If it is a make code or break code </td></tr>
    <tr><td class="paramname">twoBytes</td><td>True if the key code has two bytes</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>0, indicating no error ocurred </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><img src="group__keyboard_ga51d994a8549032c3fd7d79cdffb01b9a_cgraph.png" border="0" usemap="#group__keyboard_ga51d994a8549032c3fd7d79cdffb01b9a_cgraph" alt=""/></div>
<map name="group__keyboard_ga51d994a8549032c3fd7d79cdffb01b9a_cgraph" id="group__keyboard_ga51d994a8549032c3fd7d79cdffb01b9a_cgraph">
<area shape="rect" id="node2" href="group__keyboard.html#gaea65044de90c8a358062e32b3371adff" title="Tells if the key code is a make code or a break code. " alt="" coords="184,5,255,32"/>
</map>
</div>

</div>
</div>
<a id="ga191978dc5f40a3532d099c211a059c6a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga191978dc5f40a3532d099c211a059c6a">&#9670;&nbsp;</a></span>read_command_byte()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int read_command_byte </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>cmd_byte</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reads the command byte. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">cmd_byte</td><td>Command byte</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if some error ocurred, 0 otherwise </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><img src="group__keyboard_ga191978dc5f40a3532d099c211a059c6a_cgraph.png" border="0" usemap="#group__keyboard_ga191978dc5f40a3532d099c211a059c6a_cgraph" alt=""/></div>
<map name="group__keyboard_ga191978dc5f40a3532d099c211a059c6a_cgraph" id="group__keyboard_ga191978dc5f40a3532d099c211a059c6a_cgraph">
<area shape="rect" id="node2" href="group__keyboard.html#ga5ca96afb5f587de11c9499895d13373a" title="Checks, via reading the status register, if it can issue a command; if it can, it issues it..." alt="" coords="196,5,313,32"/>
<area shape="rect" id="node3" href="group__keyboard.html#ga971c17fcc6d78ca930d6db28a3cd1e1f" title="Reads a return value from the KBC (used after issuing a command that asks for a return value) ..." alt="" coords="202,56,307,83"/>
</map>
</div>

</div>
</div>
<a id="ga971c17fcc6d78ca930d6db28a3cd1e1f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga971c17fcc6d78ca930d6db28a3cd1e1f">&#9670;&nbsp;</a></span>read_ret_value()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int read_ret_value </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>ret</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reads a return value from the KBC (used after issuing a command that asks for a return value) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ret</td><td>Value returned</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if some error ocurred, 0 otherwise </dd></dl>

</div>
</div>
<a id="gacce7b36043562cfa187793cddb26537e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gacce7b36043562cfa187793cddb26537e">&#9670;&nbsp;</a></span>sys_inb_cnt()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int sys_inb_cnt </td>
          <td>(</td>
          <td class="paramtype">port_t&#160;</td>
          <td class="paramname"><em>port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>byte</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Counts the number of calls of sys_inb (only for lab3, not for the project) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">port</td><td>Port address </td></tr>
    <tr><td class="paramname">byte</td><td>Byte address</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if some error ocurred, 0 otherwise </dd></dl>

</div>
</div>
<a id="gab93137324dbf429632060d75313911ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gab93137324dbf429632060d75313911ee">&#9670;&nbsp;</a></span>write_command_byte()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int write_command_byte </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>cmd_byte</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Writes a command byte. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">cmd_byte</td><td>Command byte</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if some error ocurred, 0 otherwise </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><img src="group__keyboard_gab93137324dbf429632060d75313911ee_cgraph.png" border="0" usemap="#group__keyboard_gab93137324dbf429632060d75313911ee_cgraph" alt=""/></div>
<map name="group__keyboard_gab93137324dbf429632060d75313911ee_cgraph" id="group__keyboard_gab93137324dbf429632060d75313911ee_cgraph">
<area shape="rect" id="node2" href="group__keyboard.html#ga5ca96afb5f587de11c9499895d13373a" title="Checks, via reading the status register, if it can issue a command; if it can, it issues it..." alt="" coords="199,5,316,32"/>
<area shape="rect" id="node3" href="group__keyboard.html#ga20947404a9bcc23bea2ca366463344fa" title="Checks, via reading the status register, if it can issue an argument; if it can,it issues it..." alt="" coords="218,56,297,83"/>
</map>
</div>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.14
</small></address>
</body>
</html>
