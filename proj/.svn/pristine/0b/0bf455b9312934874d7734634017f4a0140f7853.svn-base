<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.14"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>LCOMProject: mouse</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">LCOMProject
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.14 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">mouse</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structstate__machine.html">state_machine</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ga905389e2171666db9e8137dae227394b"><td class="memItemLeft" align="right" valign="top">typedef enum <a class="el" href="group__mouse.html#gaa19be6305a5a4485e1e70de70ed7d677">states</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__mouse.html#ga905389e2171666db9e8137dae227394b">state_st</a></td></tr>
<tr class="separator:ga905389e2171666db9e8137dae227394b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga76553380c8cd2b5ec0ce28b4d536d45b"><td class="memItemLeft" align="right" valign="top">typedef enum <a class="el" href="group__mouse.html#gafe4bae9dd952d579fd79aa875311bfe4">lower_lev_states</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__mouse.html#ga76553380c8cd2b5ec0ce28b4d536d45b">ll_state</a></td></tr>
<tr class="separator:ga76553380c8cd2b5ec0ce28b4d536d45b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:gaa19be6305a5a4485e1e70de70ed7d677"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__mouse.html#gaa19be6305a5a4485e1e70de70ed7d677">states</a> { <br />
&#160;&#160;<a class="el" href="group__mouse.html#ggaa19be6305a5a4485e1e70de70ed7d677a7116db6906963fd0720c4a85be250cf4">INITIAL</a>, 
<a class="el" href="group__mouse.html#ggaa19be6305a5a4485e1e70de70ed7d677aa80a112a99b0cd82eff3ff5714b1bfd8">DRAWING_L</a>, 
<a class="el" href="group__mouse.html#ggaa19be6305a5a4485e1e70de70ed7d677a1a2710fb8b50ea593b207d1e79fea574">MIDDLE</a>, 
<a class="el" href="group__mouse.html#ggaa19be6305a5a4485e1e70de70ed7d677ae053d89c9f260c353b587a87de47610f">DRAWING_R</a>, 
<br />
&#160;&#160;<a class="el" href="group__mouse.html#ggaa19be6305a5a4485e1e70de70ed7d677a00a900c9df90c74f75004b3dc04f173d">COMPLETE</a>
<br />
 }</td></tr>
<tr class="separator:gaa19be6305a5a4485e1e70de70ed7d677"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafe4bae9dd952d579fd79aa875311bfe4"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__mouse.html#gafe4bae9dd952d579fd79aa875311bfe4">lower_lev_states</a> { <a class="el" href="group__mouse.html#ggafe4bae9dd952d579fd79aa875311bfe4ada017fb9310508a2e9d67cb0545ea49c">NO_BUT_PRESSED</a>, 
<a class="el" href="group__mouse.html#ggafe4bae9dd952d579fd79aa875311bfe4a5385eefbcfceb59ed9eeb6e9cff9c65b">LB_PR</a>, 
<a class="el" href="group__mouse.html#ggafe4bae9dd952d579fd79aa875311bfe4a0514764e59029b3cf7912308ded51fea">RB_PR</a>, 
<a class="el" href="group__mouse.html#ggafe4bae9dd952d579fd79aa875311bfe4af8d202b6808c48f39f2e26c9cb591c97">OTHER_BUT_COMB</a>
 }</td></tr>
<tr class="separator:gafe4bae9dd952d579fd79aa875311bfe4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga9da18257ff113b686bb826d154bfaa87"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__mouse.html#ga9da18257ff113b686bb826d154bfaa87">mouse_subscribe_int</a> (uint8_t *bit_no)</td></tr>
<tr class="memdesc:ga9da18257ff113b686bb826d154bfaa87"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subscribes the mouse interrupts on exclusive mode (meaning that the Minix IH is disabled)  <a href="#ga9da18257ff113b686bb826d154bfaa87">More...</a><br /></td></tr>
<tr class="separator:ga9da18257ff113b686bb826d154bfaa87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga685ad2706aca36d9869a30a19b9f446a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__mouse.html#ga685ad2706aca36d9869a30a19b9f446a">mouse_unsubscribe_int</a> ()</td></tr>
<tr class="memdesc:ga685ad2706aca36d9869a30a19b9f446a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unsubscribes mouse interrupts.  <a href="#ga685ad2706aca36d9869a30a19b9f446a">More...</a><br /></td></tr>
<tr class="separator:ga685ad2706aca36d9869a30a19b9f446a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad4ed83cbb3cd10456e9d849e8cad56c3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__mouse.html#gad4ed83cbb3cd10456e9d849e8cad56c3">check_if_first_byte</a> (uint8_t byte)</td></tr>
<tr class="memdesc:gad4ed83cbb3cd10456e9d849e8cad56c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if bit 3 of a byte is set, to see if we are reading the first byte of a data packet.  <a href="#gad4ed83cbb3cd10456e9d849e8cad56c3">More...</a><br /></td></tr>
<tr class="separator:gad4ed83cbb3cd10456e9d849e8cad56c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad2232c90f304f99d0a64976f15a3007e"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__mouse.html#gad2232c90f304f99d0a64976f15a3007e">read_ret_value_mouse</a> (uint8_t *ret)</td></tr>
<tr class="memdesc:gad2232c90f304f99d0a64976f15a3007e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads a return value from the KBC; used if the information is coming from the mouse (used after issuing a command that asks for a return value)  <a href="#gad2232c90f304f99d0a64976f15a3007e">More...</a><br /></td></tr>
<tr class="separator:gad2232c90f304f99d0a64976f15a3007e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga645b2091ab46f753e2005c9dfa03a8ea"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__mouse.html#ga645b2091ab46f753e2005c9dfa03a8ea">disable_mouse_int</a> ()</td></tr>
<tr class="memdesc:ga645b2091ab46f753e2005c9dfa03a8ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disables interrupts for the mouse.  <a href="#ga645b2091ab46f753e2005c9dfa03a8ea">More...</a><br /></td></tr>
<tr class="separator:ga645b2091ab46f753e2005c9dfa03a8ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4de94223d335f4e8e9fde442977ee058"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__mouse.html#ga4de94223d335f4e8e9fde442977ee058">issue_mouse_cmd</a> (uint8_t mouse_cmd, uint8_t *ackByte)</td></tr>
<tr class="memdesc:ga4de94223d335f4e8e9fde442977ee058"><td class="mdescLeft">&#160;</td><td class="mdescRight">Issues a mouse command via the command 0xD4.  <a href="#ga4de94223d335f4e8e9fde442977ee058">More...</a><br /></td></tr>
<tr class="separator:ga4de94223d335f4e8e9fde442977ee058"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaefaa65670859cd47aab0cf233e414896"><td class="memItemLeft" align="right" valign="top">int16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__mouse.html#gaefaa65670859cd47aab0cf233e414896">convert2sComp</a> (uint8_t delta, bool sign)</td></tr>
<tr class="memdesc:gaefaa65670859cd47aab0cf233e414896"><td class="mdescLeft">&#160;</td><td class="mdescRight">Given a delta value in 2´s complement and the bit sign of that value, returns the decimal value.  <a href="#gaefaa65670859cd47aab0cf233e414896">More...</a><br /></td></tr>
<tr class="separator:gaefaa65670859cd47aab0cf233e414896"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac216fe03742a5c937243d6516000af46"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__mouse.html#gac216fe03742a5c937243d6516000af46">parse_packet</a> (struct packet *pp)</td></tr>
<tr class="memdesc:gac216fe03742a5c937243d6516000af46"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function that receives a full packet (with the 3 bytes) and parses the information.  <a href="#gac216fe03742a5c937243d6516000af46">More...</a><br /></td></tr>
<tr class="separator:gac216fe03742a5c937243d6516000af46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf76e544153d3772cbdd97f5faf76f213"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__mouse.html#gaf76e544153d3772cbdd97f5faf76f213">absValue</a> (int value)</td></tr>
<tr class="memdesc:gaf76e544153d3772cbdd97f5faf76f213"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function that just returns the absolute value of a given value.  <a href="#gaf76e544153d3772cbdd97f5faf76f213">More...</a><br /></td></tr>
<tr class="separator:gaf76e544153d3772cbdd97f5faf76f213"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga15e1ea1d4cdfa4155d1d8553e86e640d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__mouse.html#ga15e1ea1d4cdfa4155d1d8553e86e640d">mouse_event_handler</a> (struct mouse_ev event_st, struct <a class="el" href="structstate__machine.html">state_machine</a> *st, uint8_t x_len, uint8_t tolerance)</td></tr>
<tr class="memdesc:ga15e1ea1d4cdfa4155d1d8553e86e640d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function that changes the state of the higher level state machine, if an event ocurred.  <a href="#ga15e1ea1d4cdfa4155d1d8553e86e640d">More...</a><br /></td></tr>
<tr class="separator:ga15e1ea1d4cdfa4155d1d8553e86e640d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga33d049206fc95aac61da421806e3e626"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__mouse.html#ga33d049206fc95aac61da421806e3e626">mouse_event_detect</a> (struct packet *pp, struct mouse_ev *event_st)</td></tr>
<tr class="memdesc:ga33d049206fc95aac61da421806e3e626"><td class="mdescLeft">&#160;</td><td class="mdescRight">Function that detects mouse events, from the information of the current packet and the lower level state machine.  <a href="#ga33d049206fc95aac61da421806e3e626">More...</a><br /></td></tr>
<tr class="separator:ga33d049206fc95aac61da421806e3e626"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>Functions for manipulating the kbc controller for the mouse </p>
<h2 class="groupheader">Typedef Documentation</h2>
<a id="ga76553380c8cd2b5ec0ce28b4d536d45b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga76553380c8cd2b5ec0ce28b4d536d45b">&#9670;&nbsp;</a></span>ll_state</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef enum <a class="el" href="group__mouse.html#gafe4bae9dd952d579fd79aa875311bfe4">lower_lev_states</a>  <a class="el" href="group__mouse.html#ga76553380c8cd2b5ec0ce28b4d536d45b">ll_state</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="ga905389e2171666db9e8137dae227394b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga905389e2171666db9e8137dae227394b">&#9670;&nbsp;</a></span>state_st</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef enum <a class="el" href="group__mouse.html#gaa19be6305a5a4485e1e70de70ed7d677">states</a>  <a class="el" href="group__mouse.html#ga905389e2171666db9e8137dae227394b">state_st</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="gafe4bae9dd952d579fd79aa875311bfe4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gafe4bae9dd952d579fd79aa875311bfe4">&#9670;&nbsp;</a></span>lower_lev_states</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__mouse.html#gafe4bae9dd952d579fd79aa875311bfe4">lower_lev_states</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ggafe4bae9dd952d579fd79aa875311bfe4ada017fb9310508a2e9d67cb0545ea49c"></a>NO_BUT_PRESSED&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ggafe4bae9dd952d579fd79aa875311bfe4a5385eefbcfceb59ed9eeb6e9cff9c65b"></a>LB_PR&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ggafe4bae9dd952d579fd79aa875311bfe4a0514764e59029b3cf7912308ded51fea"></a>RB_PR&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ggafe4bae9dd952d579fd79aa875311bfe4af8d202b6808c48f39f2e26c9cb591c97"></a>OTHER_BUT_COMB&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<a id="gaa19be6305a5a4485e1e70de70ed7d677"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaa19be6305a5a4485e1e70de70ed7d677">&#9670;&nbsp;</a></span>states</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__mouse.html#gaa19be6305a5a4485e1e70de70ed7d677">states</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ggaa19be6305a5a4485e1e70de70ed7d677a7116db6906963fd0720c4a85be250cf4"></a>INITIAL&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ggaa19be6305a5a4485e1e70de70ed7d677aa80a112a99b0cd82eff3ff5714b1bfd8"></a>DRAWING_L&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ggaa19be6305a5a4485e1e70de70ed7d677a1a2710fb8b50ea593b207d1e79fea574"></a>MIDDLE&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ggaa19be6305a5a4485e1e70de70ed7d677ae053d89c9f260c353b587a87de47610f"></a>DRAWING_R&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="ggaa19be6305a5a4485e1e70de70ed7d677a00a900c9df90c74f75004b3dc04f173d"></a>COMPLETE&#160;</td><td class="fielddoc"></td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="gaf76e544153d3772cbdd97f5faf76f213"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaf76e544153d3772cbdd97f5faf76f213">&#9670;&nbsp;</a></span>absValue()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int absValue </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Function that just returns the absolute value of a given value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">value</td><td>Value</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Absolute value </dd></dl>

</div>
</div>
<a id="gad4ed83cbb3cd10456e9d849e8cad56c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad4ed83cbb3cd10456e9d849e8cad56c3">&#9670;&nbsp;</a></span>check_if_first_byte()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool check_if_first_byte </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>byte</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if bit 3 of a byte is set, to see if we are reading the first byte of a data packet. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">byte</td><td>Packet byte</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if it is the first byte, false otherwise </dd></dl>

</div>
</div>
<a id="gaefaa65670859cd47aab0cf233e414896"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gaefaa65670859cd47aab0cf233e414896">&#9670;&nbsp;</a></span>convert2sComp()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int16_t convert2sComp </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>delta</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>sign</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Given a delta value in 2´s complement and the bit sign of that value, returns the decimal value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">delta</td><td>Delta value in 2's complement </td></tr>
    <tr><td class="paramname">sign</td><td>False if it is a positive number, true if it is negative</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Decimal value </dd></dl>

</div>
</div>
<a id="ga645b2091ab46f753e2005c9dfa03a8ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga645b2091ab46f753e2005c9dfa03a8ea">&#9670;&nbsp;</a></span>disable_mouse_int()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int disable_mouse_int </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Disables interrupts for the mouse. </p>
<dl class="section return"><dt>Returns</dt><dd>1 if some error ocurred, 0 otherwise </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><img src="group__mouse_ga645b2091ab46f753e2005c9dfa03a8ea_cgraph.png" border="0" usemap="#group__mouse_ga645b2091ab46f753e2005c9dfa03a8ea_cgraph" alt=""/></div>
<map name="group__mouse_ga645b2091ab46f753e2005c9dfa03a8ea_cgraph" id="group__mouse_ga645b2091ab46f753e2005c9dfa03a8ea_cgraph">
<area shape="rect" id="node2" href="group__keyboard.html#ga5ca96afb5f587de11c9499895d13373a" title="Checks, via reading the status register, if it can issue a command; if it can, it issues it..." alt="" coords="377,5,495,32"/>
<area shape="rect" id="node3" href="group__keyboard.html#ga971c17fcc6d78ca930d6db28a3cd1e1f" title="Reads a return value from the KBC (used after issuing a command that asks for a return value) ..." alt="" coords="204,31,309,57"/>
<area shape="rect" id="node4" href="group__keyboard.html#gab93137324dbf429632060d75313911ee" title="Writes a command byte. " alt="" coords="184,81,329,108"/>
<area shape="rect" id="node5" href="group__keyboard.html#ga20947404a9bcc23bea2ca366463344fa" title="Checks, via reading the status register, if it can issue an argument; if it can,it issues it..." alt="" coords="397,81,475,108"/>
</map>
</div>

</div>
</div>
<a id="ga4de94223d335f4e8e9fde442977ee058"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga4de94223d335f4e8e9fde442977ee058">&#9670;&nbsp;</a></span>issue_mouse_cmd()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int issue_mouse_cmd </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>mouse_cmd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>ackByte</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Issues a mouse command via the command 0xD4. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">mouse_cmd</td><td>Command to be issued </td></tr>
    <tr><td class="paramname">ackByte</td><td>Acknowledgement byte</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if some error ocurred, 0 otherwise </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><img src="group__mouse_ga4de94223d335f4e8e9fde442977ee058_cgraph.png" border="0" usemap="#group__mouse_ga4de94223d335f4e8e9fde442977ee058_cgraph" alt=""/></div>
<map name="group__mouse_ga4de94223d335f4e8e9fde442977ee058_cgraph" id="group__mouse_ga4de94223d335f4e8e9fde442977ee058_cgraph">
<area shape="rect" id="node2" href="group__keyboard.html#ga5ca96afb5f587de11c9499895d13373a" title="Checks, via reading the status register, if it can issue a command; if it can, it issues it..." alt="" coords="201,5,318,32"/>
<area shape="rect" id="node3" href="group__keyboard.html#ga20947404a9bcc23bea2ca366463344fa" title="Checks, via reading the status register, if it can issue an argument; if it can,it issues it..." alt="" coords="220,56,299,83"/>
<area shape="rect" id="node4" href="group__mouse.html#gad2232c90f304f99d0a64976f15a3007e" title="Reads a return value from the KBC; used if the information is coming from the mouse (used after issui..." alt="" coords="184,107,335,133"/>
</map>
</div>

</div>
</div>
<a id="ga33d049206fc95aac61da421806e3e626"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga33d049206fc95aac61da421806e3e626">&#9670;&nbsp;</a></span>mouse_event_detect()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void mouse_event_detect </td>
          <td>(</td>
          <td class="paramtype">struct packet *&#160;</td>
          <td class="paramname"><em>pp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct mouse_ev *&#160;</td>
          <td class="paramname"><em>event_st</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Function that detects mouse events, from the information of the current packet and the lower level state machine. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pp</td><td>Packet struct </td></tr>
    <tr><td class="paramname">event_st</td><td>The event </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ga15e1ea1d4cdfa4155d1d8553e86e640d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga15e1ea1d4cdfa4155d1d8553e86e640d">&#9670;&nbsp;</a></span>mouse_event_handler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void mouse_event_handler </td>
          <td>(</td>
          <td class="paramtype">struct mouse_ev&#160;</td>
          <td class="paramname"><em>event_st</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structstate__machine.html">state_machine</a> *&#160;</td>
          <td class="paramname"><em>st</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>x_len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>tolerance</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Function that changes the state of the higher level state machine, if an event ocurred. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">event_st</td><td>The event </td></tr>
    <tr><td class="paramname">st</td><td>The current state </td></tr>
    <tr><td class="paramname">x_len</td><td>X length </td></tr>
    <tr><td class="paramname">tolerance</td><td>Tolerance </td></tr>
  </table>
  </dd>
</dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><img src="group__mouse_ga15e1ea1d4cdfa4155d1d8553e86e640d_cgraph.png" border="0" usemap="#group__mouse_ga15e1ea1d4cdfa4155d1d8553e86e640d_cgraph" alt=""/></div>
<map name="group__mouse_ga15e1ea1d4cdfa4155d1d8553e86e640d_cgraph" id="group__mouse_ga15e1ea1d4cdfa4155d1d8553e86e640d_cgraph">
<area shape="rect" id="node2" href="group__mouse.html#gaf76e544153d3772cbdd97f5faf76f213" title="Function that just returns the absolute value of a given value. " alt="" coords="200,5,276,32"/>
</map>
</div>

</div>
</div>
<a id="ga9da18257ff113b686bb826d154bfaa87"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga9da18257ff113b686bb826d154bfaa87">&#9670;&nbsp;</a></span>mouse_subscribe_int()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int mouse_subscribe_int </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>bit_no</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Subscribes the mouse interrupts on exclusive mode (meaning that the Minix IH is disabled) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bit_no</td><td>Bit number</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if some error ocurred, 0 otherwise </dd></dl>

</div>
</div>
<a id="ga685ad2706aca36d9869a30a19b9f446a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga685ad2706aca36d9869a30a19b9f446a">&#9670;&nbsp;</a></span>mouse_unsubscribe_int()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int mouse_unsubscribe_int </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Unsubscribes mouse interrupts. </p>
<dl class="section return"><dt>Returns</dt><dd>1 if some error ocurred, 0 otherwise </dd></dl>

</div>
</div>
<a id="gac216fe03742a5c937243d6516000af46"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gac216fe03742a5c937243d6516000af46">&#9670;&nbsp;</a></span>parse_packet()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int parse_packet </td>
          <td>(</td>
          <td class="paramtype">struct packet *&#160;</td>
          <td class="paramname"><em>pp</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Function that receives a full packet (with the 3 bytes) and parses the information. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pp</td><td>Packet struct</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>0, indicating no error ocurred </dd></dl>
<div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><img src="group__mouse_gac216fe03742a5c937243d6516000af46_cgraph.png" border="0" usemap="#group__mouse_gac216fe03742a5c937243d6516000af46_cgraph" alt=""/></div>
<map name="group__mouse_gac216fe03742a5c937243d6516000af46_cgraph" id="group__mouse_gac216fe03742a5c937243d6516000af46_cgraph">
<area shape="rect" id="node2" href="group__mouse.html#gaefaa65670859cd47aab0cf233e414896" title="Given a delta value in 2´s complement and the bit sign of that value, returns the decimal value..." alt="" coords="153,5,264,32"/>
</map>
</div>

</div>
</div>
<a id="gad2232c90f304f99d0a64976f15a3007e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#gad2232c90f304f99d0a64976f15a3007e">&#9670;&nbsp;</a></span>read_ret_value_mouse()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int read_ret_value_mouse </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>ret</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reads a return value from the KBC; used if the information is coming from the mouse (used after issuing a command that asks for a return value) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ret</td><td>Value returned</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if some error ocurred, 0 otherwise </dd></dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.14
</small></address>
</body>
</html>
